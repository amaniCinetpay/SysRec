# version: '3.7'

# services:
#   web:
#     build: ./api_test
#     command: python manage.py runserver 0.0.0.0:8080
#     volumes:
#       - ./app/:/usr/src/app/
#     ports:
#       - "8080:8080"
#     env_file:
#       - ./.env.dev
#     depends_on:
#       - db
#     expose: 
#       - "8080"
#   db:
#     image: postgres:12.0-alpine
#     volumes:
#       - postgres_data:/var/lib/postgresql/data/
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=123456
#       - POSTGRES_DB=cinetpay

# volumes:
#   postgres_data:


    version: '3.7'
    services:
      nginx:
        container_name: dev_web
        restart: on-failure
        #image: nginx:1.19.8
        build: 
          ./FrontEnd
        volumes:
          - ./nginx/prod/nginx.conf:/etc/nginx/conf.d/default.conf
          - static_volume:/app/static
        ports:
          - 82:82
        depends_on:
          - web
      web:
        container_name: dev_backend
        build: ./api_test
        restart: always
        env_file: dev.env
        command: bash -c "python manage.py runserver 0.0.0.0:7000 && python manage.py process_tasks"
        volumes:
         - .:/app
         - static_volume:/app/static
        depends_on:
         - db
        ports:
          - "7000:7000"
      db:
        container_name: dev_db
        image: postgres:12.0-alpine
        env_file: dev.env
        ports: 
          - "5433:5432"
        # volumes:
        #   - postgres_data:/var/lib/postgresql/data/
      adminer : 
        image : adminer
        restart: always
        ports:
          - "9100:8080"
  
    
    volumes:
      static_volume:
      postgres_data: